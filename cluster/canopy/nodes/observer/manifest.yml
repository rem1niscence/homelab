apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: canopy
  name: observer-1
  labels:
    app: observer-1
  annotations:
    keel.sh/policy: all
    keel.sh/pollSchedule: "@every 30m"
    keel.sh/trigger: poll
spec:
  replicas: 1
  selector:
    matchLabels:
      app: observer-1
  template:
    metadata:
      labels:
        app: observer-1
    spec:
      nodeSelector:
        type: secondary
      initContainers:
        - name: keystore-init
          image: busybox:1.36
          command: ["sh", "/scripts/keystore-init.sh"]
          volumeMounts:
            - name: data
              mountPath: /root/.canopy
              subPath: observer-1
            - name: config
              mountPath: /tmp/keystore
            - name: scripts
              mountPath: /scripts
      containers:
        - name: canopy
          image: canopynetwork/canopy:latest
          args: ["start"]
          ports:
            - containerPort: 50000
            - containerPort: 50001
            - containerPort: 50002
            - containerPort: 50003
            - containerPort: 50004
            - containerPort: 9001
            - containerPort: 9090
          volumeMounts:
            - name: data
              mountPath: /root/.canopy
              subPath: observer-1
            - name: config
              mountPath: /root/.canopy/config.json
              subPath: config.json
            - name: config
              mountPath: /root/.canopy/genesis.json
              subPath: genesis.json
            - name: config
              mountPath: /root/.canopy/validator_key.json
              subPath: validator_key.json
        - name: height-monitor
          image: alpine/curl:8.14.1
          command: ["sh", "-c"]
          args:
            - |
              apk add --no-cache curl
              while true; do
                /scripts/height.sh
                sleep 10
              done
          env:
            - name: PORT
              value: "50002"
            - name: FILE_NAME
              value: "height_1.txt"
          volumeMounts:
            - name: data
              mountPath: /root/.canopy
              subPath: observer-1
            - name: scripts
              mountPath: /scripts
      volumes:
        - name: config
          configMap:
            name: observer
            items:
              - key: observer-1
                path: config.json
              - key: genesis-observer-1
                path: genesis.json
              - key: keystore
                path: keystore.json
              - key: validator-key
                path: validator_key.json
        - name: scripts
          configMap:
            name: scripts
            defaultMode: 0755
        - name: data
          persistentVolumeClaim:
            claimName: observer-1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: canopy
  name: observer-2
  labels:
    app: observer-2
  annotations:
    keel.sh/policy: all
    keel.sh/pollSchedule: "@every 20m"
    keel.sh/trigger: poll
spec:
  replicas: 1
  selector:
    matchLabels:
      app: observer-2
  template:
    metadata:
      labels:
        app: observer-2
    spec:
      nodeSelector:
        type: secondary
      initContainers:
        - name: keystore-init
          image: busybox:1.36
          command: ["sh", "/scripts/keystore-init.sh"]
          volumeMounts:
            - name: data
              mountPath: /root/.canopy
              subPath: observer-2
            - name: config
              mountPath: /tmp/keystore
            - name: scripts
              mountPath: /scripts
      containers:
        - name: canopy
          image: canopynetwork/canopy:latest
          args: ["start"]
          ports:
            - containerPort: 50000
            - containerPort: 50001
            - containerPort: 50002
            - containerPort: 50003
            - containerPort: 50004
            - containerPort: 9002
            - containerPort: 9090
          volumeMounts:
            - name: data
              mountPath: /root/.canopy
              subPath: observer-2
            - name: config
              mountPath: /root/.canopy/config.json
              subPath: config.json
            - name: config
              mountPath: /root/.canopy/genesis.json
              subPath: genesis.json
            - name: config
              mountPath: /root/.canopy/validator_key.json
              subPath: validator_key.json
        - name: height-monitor
          image: alpine/curl:8.14.1
          command: ["sh", "-c"]
          args:
            - |
              apk add --no-cache curl
              while true; do
                /scripts/height.sh
                sleep 10
              done
          env:
            - name: PORT
              value: "40002"
            - name: FILE_NAME
              value: "height_2.txt"
          volumeMounts:
            - name: data
              mountPath: /root/.canopy
              subPath: observer-2
            - name: scripts
              mountPath: /scripts
      volumes:
        - name: config
          configMap:
            name: observer
            items:
              - key: observer-2
                path: config.json
              - key: genesis-observer-2
                path: genesis.json
              - key: keystore
                path: keystore.json
              - key: validator-key
                path: validator_key.json
        - name: scripts
          configMap:
            name: scripts
            defaultMode: 0755
        - name: data
          persistentVolumeClaim:
            claimName: observer-2
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: canopy-observer-1-pv
spec:
  capacity:
    storage: 3T
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.0.95
    path: /mnt/ssd_2tb/canopy
  storageClassName: local-path
  mountOptions:
    - vers=4.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: canopy
  name: observer-1
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3T
  volumeName: canopy-observer-1-pv
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: canopy-observer-2-pv
spec:
  capacity:
    storage: 3T
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.0.95
    path: /mnt/ssd_2tb/canopy
  storageClassName: local-path
  mountOptions:
    - vers=4.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: canopy
  name: observer-2
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3T
  volumeName: canopy-observer-2-pv
  storageClassName: local-path
---
apiVersion: v1
kind: Service
metadata:
  namespace: canopy
  name: observer-1
spec:
  ports:
    - port: 50000
      targetPort: 50000
      name: wallet
    - port: 50001
      targetPort: 50001
      name: explorer
    - port: 50002
      targetPort: 50002
      name: rpc
    - port: 50003
      targetPort: 50003
      name: admin-rpc
    - port: 9001
      targetPort: 9001
      name: external
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: observer-1
---
apiVersion: v1
kind: Service
metadata:
  namespace: canopy
  name: observer-2
spec:
  ports:
    - port: 40000
      targetPort: 40000
      name: wallet
    - port: 40001
      targetPort: 40001
      name: explorer
    - port: 40002
      targetPort: 40002
      name: rpc
    - port: 40003
      targetPort: 40003
      name: admin-rpc
    - port: 9002
      targetPort: 9002
      name: external
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: observer-2
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  namespace: canopy
  name: observer
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host("observer-1-wallet-1.{{DOMAIN}}")
      kind: Rule
      services:
        - name: observer-1
          port: 50000
    - match: Host("observer-1-explorer-1.{{DOMAIN}}")
      kind: Rule
      services:
        - name: observer-1
          port: 50001
    - match: Host("rpc-observer-1-canopy.{{DOMAIN}}")
      kind: Rule
      services:
        - name: observer-1
          port: 50002
    - match: Host("admin-rpc-observer-1-canopy.{{DOMAIN}}")
      kind: Rule
      services:
        - name: observer-1
          port: 50003

    - match: Host("observer-2-wallet-2.{{DOMAIN}}")
      kind: Rule
      services:
        - name: observer-2
          port: 40000
    - match: Host("observer-2-explorer-2.{{DOMAIN}}")
      kind: Rule
      services:
        - name: observer-2
          port: 40001
    - match: Host("rpc-observer-2-canopy.{{DOMAIN}}")
      kind: Rule
      services:
        - name: observer-2
          port: 40002
    - match: Host("admin-rpc-observer-2-canopy.{{DOMAIN}}")
      kind: Rule
      services:
        - name: observer-2
          port: 40003
