# To manually create a job out of this: kubectl create job backup-manual --from=cronjob/backup
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup
  namespace: canopy
  labels:
    app: backup
  annotations:
    keel.sh/policy: all
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/trigger: poll
spec:
  schedule: "0 */6 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: backup
        spec:
          serviceAccountName: backup-sa
          nodeSelector:
            type: secondary
          restartPolicy: OnFailure
          containers:
            - name: backup
              image: registry.local/canopy-backup:latest
              imagePullPolicy: Always # TODO: Remove once image is stable
              env:
                # Require by ORACLE S3 Compatibility layer
                - name: AWS_REQUEST_CHECKSUM_CALCULATION
                  value: WHEN_REQUIRED
              envFrom:
                - secretRef:
                    name: backup
              volumeMounts:
                - name: data
                  mountPath: /root/.canopy
                  subPath: node-1
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: node-2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backup-sa
  namespace: canopy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: canopy
  name: backup
rules:
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/scale"]
    verbs: ["get", "patch", "update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backup
  namespace: canopy
subjects:
  - kind: ServiceAccount
    name: backup-sa
    namespace: canopy
roleRef:
  kind: Role
  name: backup
  apiGroup: rbac.authorization.k8s.io
