apiVersion: v1
kind: Namespace
metadata:
  name: commafeed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: commafeed
  namespace: commafeed
spec:
  replicas: 1
  selector:
    matchLabels:
      app: commafeed
  template:
    metadata:
      labels:
        app: commafeed
    spec:
      nodeSelector:
        type: pi
      containers:
        - name: commafeed
          image: athou/commafeed:latest-postgresql-jvm
          ports:
            - containerPort: 8082
          env:
            - name: "QUARKUS_DATASOURCE_JDBC_URL"
              value: "jdbc:postgresql://db:5432/commafeed"
            - name: "QUARKUS_DATASOURCE_USERNAME"
              value: "commafeed"
            - name: "QUARKUS_DATASOURCE_PASSWORD"
              value: "fIp2JZ3Sa4"
          volumeMounts:
            - name: data
              mountPath: /commafeed/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: commafeed
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      nodeSelector:
        type: secondary
      containers:
        - name: db
          image: postgres:alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "commafeed"
            - name: POSTGRES_USER
              value: "commafeed"
            - name: POSTGRES_PASSWORD
              value: "fIp2JZ3Sa4"
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: commafeed
  name: data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: commafeed
  name: db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  namespace: commafeed
  name: db
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: db
---
apiVersion: v1
kind: Service
metadata:
  namespace: commafeed
  name: commafeed
spec:
  ports:
    - port: 80
      targetPort: 8082
  selector:
    app: commafeed
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: commafeed
  namespace: commafeed
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`commafeed.{{DOMAIN}}`)
      kind: Rule
      services:
        - name: commafeed
          port: 80
