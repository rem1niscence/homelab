apiVersion: v1
kind: Namespace
metadata:
  name: filebrowser
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: filebrowser
  name: filebrowser
  labels:
    app: filebrowser
  annotations:
    keel.sh/policy: all
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/trigger: poll
spec:
  replicas: 1
  selector:
    matchLabels:
      app: filebrowser
  template:
    metadata:
      labels:
        app: filebrowser
    spec:
      nodeSelector:
        type: pi
      containers:
        - name: filebrowser
          image: filebrowser/filebrowser:s6
          volumeMounts:
            - name: data
              mountPath: /srv
            - name: db
              mountPath: /database
            - name: db
              mountPath: /config
            - name: cloud
              mountPath: /srv/cloud
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data-pvc
        - name: cloud
          persistentVolumeClaim:
            claimName: cloud-pvc
        - name: db
          persistentVolumeClaim:
            claimName: db-pvc
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: filebrowser-data-pv
spec:
  capacity:
    storage: 3T
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.0.95
    path: /mnt/main_drive/data
  storageClassName: local-path
  mountOptions:
    - vers=4.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: filebrowser
  name: data-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3T
  volumeName: filebrowser-data-pv
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: filebrowser-cloud-pv
spec:
  capacity:
    storage: 3T
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.0.95
    path: /mnt/main_drive/cloud
  storageClassName: local-path
  mountOptions:
    - vers=4.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: filebrowser
  name: cloud-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3T
  volumeName: filebrowser-cloud-pv
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: filebrowser
  name: db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  namespace: filebrowser
  name: filebrowser
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: filebrowser
---
apiVersion: v1
kind: Service
metadata:
  namespace: filebrowser
  name: filebrowser
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: filebrowser
---
# apiVersion: v1
# kind: Service
# metadata:
#   namespace: filebrowser
#   name: filebrowser-lb
# spec:
#   type: LoadBalancer
#   ports:
#     - port: 9050
#       targetPort: 80
#   selector:
#     app: filebrowser
# ----- WebDav Setup -----
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: filebrowser
  name: webdav
  labels:
    app: webdav
  annotations:
    keel.sh/policy: all
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/trigger: poll
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webdav
  template:
    metadata:
      labels:
        app: webdav
    spec:
      nodeSelector:
        type: pi
      containers:
        - name: webdav
          image: hacdias/webdav:latest
          args: ["-c", "/config/config.yml"]
          ports:
            - containerPort: 6060
          envFrom:
            - secretRef:
                name: webdav
          volumeMounts:
            - name: data
              mountPath: /data
            - name: cloud
              mountPath: /data/cloud
            - name: webdav
              mountPath: /config
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data-pvc
        - name: cloud
          persistentVolumeClaim:
            claimName: cloud-pvc
        - name: webdav
          configMap:
            name: webdav
            items:
              - key: config
                path: config.yml
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: filebrowser
  name: webdav
data:
  config: |
    port: 6060
    directory: /data
    behindProxy: true
    permissions: CRUD

    users:
      - username: "{env}USERNAME"
        password: "{env}PASSWORD"
---
apiVersion: v1
kind: Service
metadata:
  namespace: filebrowser
  name: webdav
spec:
  ports:
    - port: 80
      targetPort: 6060
  selector:
    app: webdav
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: filebrowser
  namespace: filebrowser
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`filebrowser.{{DOMAIN}}`)
      kind: Rule
      services:
        - name: filebrowser
          port: 80
    - match: Host(`webdav.{{DOMAIN}}`)
      kind: Rule
      services:
        - name: webdav
          port: 80
