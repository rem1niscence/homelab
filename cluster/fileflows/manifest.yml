apiVersion: v1
kind: Namespace
metadata:
  name: fileflows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: fileflows
  name: fileflows
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fileflows
  template:
    metadata:
      labels:
        app: fileflows
    spec:
      nodeSelector:
        type: secondary
      containers:
        - name: fileflows
          image: revenz/fileflows
          # image: revenz/fileflows:25.05
          ports:
            - containerPort: 5000
          env:
            - name: TZ
              value: "Europe/Madrid"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          resources:
            limits:
              amd.com/gpu: 1
          volumeMounts:
            - name: media
              mountPath: /media
            - name: config
              mountPath: /app/Data
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media
        - name: config
          persistentVolumeClaim:
            claimName: config
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: fileflows-media-pv
spec:
  capacity:
    storage: 3T
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.0.95
    path: /mnt/main_drive/data/media
  storageClassName: local-path
  mountOptions:
    - vers=4.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: fileflows
  name: media
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3T
  volumeName: fileflows-media-pv
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: fileflows
  name: config
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  name: fileflows
  namespace: fileflows
spec:
  ports:
    - port: 80
      targetPort: 5000
  selector:
    app: fileflows
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: fileflows
  namespace: fileflows
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`fileflows.{{DOMAIN}}`)
      kind: Rule
      services:
        - name: fileflows
          port: 80
