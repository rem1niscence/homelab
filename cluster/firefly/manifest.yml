apiVersion: v1
kind: Namespace
metadata:
  name: firefly
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: firefly
  namespace: firefly
data:
  APP_ENV: "production"
  APP_DEBUG: "false"
  DEFAULT_LANGUAGE: "en_US"
  DEFAULT_LOCALE: "equal"
  TZ: "Etc/UTC"
  TRUSTED_PROXIES: "**"
  LOG_CHANNEL: stack
  AUDIT_LOG_LEVEL: "info"
  DB_DATABASE: "firefly"
  DB_HOST: "mariadb"
  DB_PORT: "3306"
  DB_USERNAME: "firefly"
  CACHE_DRIVER: "redis"
  SESSION_DRIVER: "redis"
  REDIS_SCHEME: "tcp"
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_CACHE_DB: "1"
  COOKIE_PATH: "/"
  COOKIE_DOMAIN: ""
  COOKIE_SECURE: "false"
  COOKIE_SAMESITE: "lax"
  ENABLE_EXTERNAL_RATES: "true"
  ALLOW_WEBHOOKS: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: firefly
  namespace: firefly
spec:
  replicas: 1
  selector:
    matchLabels:
      app: firefly
  template:
    metadata:
      labels:
        app: firefly
    spec:
      nodeSelector:
        type: secondary
      containers:
      - name: firefly
        image: fireflyiii/core:latest
        envFrom:
        - configMapRef:
            name: firefly
        env:
          - name: SITE_OWNER
            valueFrom:
              secretKeyRef:
                name: firefly
                key: SITE_OWNER
                optional: false
          - name: APP_KEY
            valueFrom:
              secretKeyRef:
                name: firefly
                key: APP_KEY
                optional: false
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: firefly
                key: DB_PASSWORD
                optional: false
          - name: STATIC_CRON_TOKEN
            valueFrom:
              secretKeyRef:
                name: firefly
                key: STATIC_CRON_TOKEN
                optional: false
        volumeMounts:
          - name: upload
            mountPath: /var/www/html/storage/upload
      volumes:
      - name: upload
        persistentVolumeClaim:
          claimName: storage-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
  namespace: firefly
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      containers:
      - name: mariadb
        image: linuxserver/mariadb
        ports:
        - containerPort: 3306
        env:
          - name: MYSQL_DATABASE
            value: "firefly"
          - name: MYSQL_USER
            value: "firefly"
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: firefly
                key: MYSQL_ROOT_PASSWORD
                optional: false
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: firefly
                key: MYSQL_PASSWORD
                optional: false
        volumeMounts:
          - name: config
            mountPath: /config
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: mariadb-config-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: firefly
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: firefly
  name: storage-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2G
  storageClassName: longhorn
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: firefly
  name: mariadb-config-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2G
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  namespace: firefly
  name: firefly
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: firefly
---
apiVersion: v1
kind: Service
metadata:
  namespace: firefly
  name: mariadb
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mariadb
---
apiVersion: v1
kind: Service
metadata:
  namespace: firefly
  name: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: firefly
  namespace: firefly
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host("firefly.{{DOMAIN}}")
      kind: Rule
      services:
        - name: firefly
          port: 80
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   namespace: firefly
#   name: firefly-cron
# data:
#   # To make this work, set STATIC_CRON_TOKEN in your .env file or as an 
#   # environment variable and replace REPLACEME below The STATIC_CRON_TOKEN 
#   # must be *exactly* 32 characters long
#   cron-command: sh -c "echo \"0 3 * * * wget -qO- http://firefly:8080/api/v1/cron/5951b141610c25ccda5c63b4ca20aeba\" | crontab - && crond -f -L /dev/stdout"
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: firefly-upload
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 2Gi # Adjust as needed
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mariadb-config
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi # Adjust as needed
# ---
