apiVersion: v1
kind: Namespace
metadata:
  name: hoppscotch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hoppscotch
  namespace: hoppscotch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hoppscotch
  template:
    metadata:
      labels:
        app: hoppscotch
    spec:
      nodeSelector:
        type: main
      containers:
        - name: hoppscotch
          image: webysther/hoppscotch:latest
          ports:
            - containerPort: 80
          envFrom:
            - secretRef:
                name: hoppscotch
          env:
            - name: "MODE"
              value: "team"
            - name: ENABLE_ADMIN
              value: "true"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Etc/UTC"
            - name: EXTENSIONS_ENABLED
              value: "true"
            - name: SCHEMA
              value: "https"
            - name: MAILER_ADDRESS_FROM
              value: "hoppscotch@localhost.com"
            - name: DOMAIN
              value: "hoppscotch.{{DOMAIN}}"
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hoppscotch-db
  namespace: hoppscotch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hoppscotch-db
  template:
    metadata:
      labels:
        app: hoppscotch-db
    spec:
      containers:
        - name: hoppscotch-db
          image: postgres:alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "hoppscotch"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hoppscotch
                  key: POSTGRES_PASSWORD
                  optional: false
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: pg-data-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: hoppscotch
  name: config-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: hoppscotch
  name: pg-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  namespace: hoppscotch
  name: hoppscotch-db
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: hoppscotch-db
---
apiVersion: v1
kind: Service
metadata:
  namespace: hoppscotch
  name: hoppscotch
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: hoppscotch
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: hoppscotch
  namespace: hoppscotch
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`hoppscotch.{{DOMAIN}}`)
      kind: Rule
      services:
        - name: hoppscotch
          port: 80
