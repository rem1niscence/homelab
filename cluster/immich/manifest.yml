apiVersion: v1
kind: Namespace
metadata:
  name: immich
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich
  namespace: immich
  labels:
    app: immich
  annotations:
    keel.sh/policy: all
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/trigger: poll
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich
  template:
    metadata:
      labels:
        app: immich
    spec:
      nodeSelector:
        type: main
      containers:
        - name: immich
          image: ghcr.io/immich-app/immich-server:release
          ports:
            - containerPort: 2283
          env:
            - name: TZ
              value: "Etc/UTC"
            - name: DB_HOSTNAME
              value: "postgres"
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: immich
                  key: POSTGRES_DB
                  optional: false
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: immich
                  key: POSTGRES_USER
                  optional: false
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich
                  key: POSTGRES_PASSWORD
                  optional: false
            - name: REDIS_URL
              # {"host":"redis","port":6379}
              value: "ioredis://eyJob3N0IjoicmVkaXMiLCJwb3J0Ijo2Mzc5fQ=="
            - name: IMMICH_PORT
              value: "2283"
            - name: REDIS_HOST
              value: "redis"
            - name: REDIS_PORT
              value: "6379"
          volumeMounts:
            - name: data
              mountPath: /usr/src/app/upload
              subPath: immich
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-machine-learning
  namespace: immich
  labels:
    app: immich-machine-learning
  annotations:
    keel.sh/policy: all
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/trigger: poll
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-machine-learning
  template:
    metadata:
      labels:
        app: immich-machine-learning
    spec:
      nodeSelector:
        type: secondary
      containers:
        - name: immich-machine-learning
          image: ghcr.io/immich-app/immich-machine-learning:release
          ports:
            - containerPort: 3003
          env:
            - name: IMMICH_PORT
              value: "3003"
          volumeMounts:
            - name: cache
              mountPath: /cache
              subPath: ml
      volumes:
        - name: cache
          persistentVolumeClaim:
            claimName: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: immich
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      nodeSelector:
        type: pi
      containers:
        - name: postgres
          image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: immich
                  key: POSTGRES_DB
                  optional: false
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: immich
                  key: POSTGRES_USER
                  optional: false
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich
                  key: POSTGRES_PASSWORD
                  optional: false
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: postgres
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: postgres
          persistentVolumeClaim:
            claimName: postgres
---

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: immich
  name: redis
  labels:
    app: redis
  annotations:
    keel.sh/policy: all
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/trigger: poll
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      restartPolicy: Always
      nodeSelector:
        type: pi
      containers:
        - name: redis
          image: redis:alpine
          ports:
            - containerPort: 6379
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 15
            timeoutSeconds: 5
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: immich-data-pv
spec:
  capacity:
    storage: 5G
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.0.95
    path: /mnt/main_drive/images
  storageClassName: local-path
  mountOptions:
    - vers=4.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: immich
  name: data
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1G
  volumeName: immich-data-pv
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: immich
  name: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn-local
---
apiVersion: v1
kind: Service
metadata:
  namespace: immich
  name: postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  namespace: immich
  name: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
---
apiVersion: v1
kind: Service
metadata:
  namespace: immich
  name: immich-machine-learning
spec:
  ports:
    - port: 3003
      targetPort: 3003
  selector:
    app: immich-machine-learning
---
apiVersion: v1
kind: Service
metadata:
  namespace: immich
  name: immich
spec:
  ports:
    - port: 80
      targetPort: 2283
  selector:
    app: immich
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: immich
  namespace: immich
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`immich.{{DOMAIN}}`)
      kind: Rule
      services:
        - name: immich
          port: 80
