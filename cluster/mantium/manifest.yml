apiVersion: v1
kind: Namespace
metadata:
  name: mantium
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: mantium
  name: mantium-api
  labels:
    app: mantium-api
  annotations:
    keel.sh/policy: all
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/trigger: poll
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mantium-api
  template:
    metadata:
      labels:
        app: mantium-api
    spec:
      nodeSelector:
        type: main
      containers:
        - name: mantium-api
          image: ghcr.io/diogovalentte/mantium-api:latest
          ports:
            - containerPort: 80
          env:
            - name: TZ
              value: "Europe/Madrid"

            - name: POSTGRES_HOST
              value: "postgres"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: "mantium"
            - name: POSTGRES_USER
              value: "mantium"
            - name: POSTGRES_PASSWORD
              value: "mantium1234"

            # - name: NTFY_ADDRESS
            #   value: "https://ntfy.sh"
            # - name: NTFY_TOPIC
            #   value: "your_ntfy_topic"
            # - name: NTFY_TOKEN
            #   value: "your_ntfy_token"

            - name: LOG_LEVEL
              value: "info"
            - name: API_PORT
              value: "80"

            - name: UPDATE_MANGAS_PERIODICALLY
              value: "true"
            - name: UPDATE_MANGAS_PERIODICALLY_NOTIFY
              value: "false"
            - name: UPDATE_MANGAS_PERIODICALLY_MINUTES
              value: "360"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: mantium
  name: mantium-ui
  labels:
    app: mantium-ui
  annotations:
    keel.sh/policy: all
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/trigger: poll
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mantium-ui
  template:
    metadata:
      labels:
        app: mantium-ui
    spec:
      nodeSelector:
        type: pi
      containers:
        - name: mantium-ui
          image: ghcr.io/diogovalentte/mantium-dashboard:latest
          ports:
            - containerPort: 8501
          env:
            - name: TZ
              value: "Europe/Madrid"
            - name: API_ADDRESS
              value: "https://mantium-api.{{DOMAIN}}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: mantium
  annotations:
    keel.sh/policy: all
    keel.sh/pollSchedule: "@every 30m"
    keel.sh/trigger: poll
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "mantium"
            - name: POSTGRES_USER
              value: "mantium"
            - name: POSTGRES_PASSWORD
              value: "mantium1234"
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: mantium
  name: config
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn-local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: mantium
  name: db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn-local
---
apiVersion: v1
kind: Service
metadata:
  namespace: mantium
  name: mantium-api
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: mantium-api
---
apiVersion: v1
kind: Service
metadata:
  namespace: mantium
  name: mantium-ui
spec:
  ports:
    - port: 80
      targetPort: 8501
  selector:
    app: mantium-ui
---
apiVersion: v1
kind: Service
metadata:
  namespace: mantium
  name: postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: mantium
  namespace: mantium
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`mantium-api.{{DOMAIN}}`)
      kind: Rule
      services:
        - name: mantium-api
          port: 80
    - match: Host(`mantium.{{DOMAIN}}`)
      kind: Rule
      services:
        - name: mantium-ui
          port: 80
