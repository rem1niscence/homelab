apiVersion: v1
kind: Namespace
metadata:
  name: n8n
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      nodeSelector:
        type: main
      containers:
        - name: n8n
          securityContext:
            runAsUser: 0
          image: docker.n8n.io/n8nio/n8n
          ports:
            - containerPort: 80
          env:
            - name: N8N_PORT
              value: "80"
            - name: N8N_PROTOCOL
              value: "https"
            - name: NODE_ENV
              value: "production"
            - name: GENERIC_TIMEZONE
              value: "Etc/UTC"
            - name: N8N_HOST
              valueFrom:
                secretKeyRef:
                  name: n8n
                  key: N8N_HOST
                  optional: false
            - name: WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: n8n
                  key: WEBHOOK_URL
                  optional: false
          volumeMounts:
            - name: config
              mountPath: /home/node/.n8n
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: n8n
  name: config-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  namespace: n8n
  name: n8n
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: n8n
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: n8n
  namespace: n8n
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`n8n.{{DOMAIN}}`)
      kind: Rule
      services:
        - name: n8n
          port: 80
