apiVersion: v1
kind: Namespace
metadata:
  name: paperless
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: paperless
  name: paperless
  labels:
    app: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless
  template:
    metadata:
      labels:
        app: paperless
    spec:
      restartPolicy: Always
      containers:
        - name: paperless
          image: paperlessngx/paperless-ngx:latest
          ports:
            - containerPort: 8000
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "curl -fs -S --max-time 2 http://localhost:8000"
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 10
            failureThreshold: 5
          envFrom:
            - secretRef:
                name: paperless
          env:
            - name: USERMAP_UID
              value: "1000"
            - name: USERMAP_GID
              value: "1000"
            - name: PAPERLESS_REDIS
              value: "redis://redis:6379"
            - name: PAPERLESS_PORT
              value: "8000"
            - name: PAPERLESS_OCR_DESKEW
              value: "false"
          volumeMounts:
            - name: config
              mountPath: /usr/src/paperless/data
              subPath: data
            - name: storage
              mountPath: /usr/src/paperless/media
              subPath: media
            - name: storage
              mountPath: /usr/src/paperless/export
              subPath: export
            - name: storage
              mountPath: /usr/src/paperless/consume
              subPath: consume
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config-pvc
        - name: storage
          persistentVolumeClaim:
            claimName: storage-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: paperless
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      restartPolicy: Always
      containers:
        - name: redis
          image: redis:alpine
          ports:
            - containerPort: 6379
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 15
            timeoutSeconds: 5
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: paperless-storage-pv
spec:
  capacity:
    storage: 5G
  accessModes:
    - ReadWriteMany
  nfs:
    server: 10.0.0.95
    path: /mnt/main_drive/data/paperless
  storageClassName: local-path
  mountOptions:
    - vers=4.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: paperless
  name: storage-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1G
  volumeName: paperless-storage-pv
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: paperless
  name: config-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2G
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  namespace: paperless
  name: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
---
apiVersion: v1
kind: Service
metadata:
  namespace: paperless
  name: paperless
spec:
  ports:
    - port: 80
      targetPort: 8000
  selector:
    app: paperless
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: paperless
  namespace: paperless
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host("paperless.{{DOMAIN}}")
      kind: Rule
      services:
        - name: paperless
          port: 80
