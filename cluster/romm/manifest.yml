apiVersion: v1
kind: Namespace
metadata:
  name: romm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: romm
  name: romm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: romm
  template:
    metadata:
      labels:
        app: romm
    spec:
      nodeSelector:
        type: secondary
      initContainers:
        - name: volume-permissions
          image: busybox
          command: ['sh', '-c', 'chown -R 1000:1000 /romm/config && chmod -R 770 /romm/config']
          volumeMounts:
            - name: config
              mountPath: /romm/config
      containers:
        - name: romm
          image: rommapp/romm
          securityContext:
            privileged: true
          ports:
            - containerPort: 80
          envFrom:
            - secretRef:
                name: romm
          env:
            - name: DB_HOST
              value: "mariadb"
            - name: DB_PORT
              value: "3306"
            - name: DB_NAME
              value: "romm"
            - name: DB_USER
              value: "romm"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: romm
                  key: MYSQL_ROOT_PASSWORD
                  optional: false
            - name: ROMM_AUTH_ENABLED
              value: "true"
            - name: ENABLE_EXPERIMENTAL_REDIS
              value: "true"
            - name: "REDIS_HOST"
              value: "redis"
            - name: "REDIS_PORT"
              value: "6379"
          volumeMounts:
            - name: data
              mountPath: /romm/library
              subPath: library
            - name: data
              mountPath: /romm/resources
              subPath: resources
            - name: data
              mountPath: /romm/assets
              subPath: assets
            - name: data
              mountPath: /romm/logs
              subPath: logs
            - name: config
              mountPath: /romm/config
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
        - name: config
          persistentVolumeClaim:
            claimName: config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
  namespace: romm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      nodeSelector:
        type: main
      containers:
        - name: mariadb
          image: linuxserver/mariadb
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: romm
                  key: MYSQL_ROOT_PASSWORD
                  optional: false
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: romm
                  key: MYSQL_ROOT_PASSWORD
                  optional: false
            - name: MYSQL_DATABASE
              value: "romm"
            - name: MYSQL_USER
              value: "romm"
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: romm
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      restartPolicy: Always
      nodeSelector:
        type: pi
      containers:
        - name: redis
          image: redis:alpine
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: romm-data
spec:
  capacity:
    storage: 3T
  accessModes:
    - ReadWriteMany
  nfs:
    server: 10.0.0.95
    path: /mnt/main_drive/data/containers/romm
  storageClassName: local-path
  mountOptions:
    - vers=4.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: romm
  name: data
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3T
  volumeName: romm-data
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: romm
  name: config
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2G
  storageClassName: longhorn
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: romm
  name: db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  namespace: romm
  name: romm
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: romm
---
apiVersion: v1
kind: Service
metadata:
  namespace: romm
  name: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
---
apiVersion: v1
kind: Service
metadata:
  namespace: romm
  name: mariadb
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mariadb
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: romm
  namespace: romm
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`romm.{{DOMAIN}}`)
      kind: Rule
      services:
        - name: romm
          port: 80
