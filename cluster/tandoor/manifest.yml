apiVersion: v1
kind: Namespace
metadata:
  name: tandoor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tandoor
  namespace: tandoor
spec:
  selector:
    matchLabels:
      app: tandoor
  template:
    metadata:
      labels:
        app: tandoor
    spec:
      nodeSelector:
        type: pi
      containers:
        - name: tandoor
          image: vabene1111/recipes
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: tandoor
          env:
            - name: DB_ENGINE
              value: django.db.backends.postgresql
            - name: POSTGRES_HOST
              value: db
            - name: POSTGRES_PORT
              value: "5432"
            - name: TANDOOR_PORT
              value: "80"
          volumeMounts:
            - name: data
              mountPath: /opt/recipes/staticfiles
              subPath: static
            - name: data
              mountPath: /opt/recipes/mediafiles
              subPath: media
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: tandoor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: postgres:alpine
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: tandoor
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: db-pvc
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tandoor-data-pv
spec:
  capacity:
    storage: 10G
  accessModes:
    - ReadWriteMany
  nfs:
    server: 10.0.0.95
    path: /mnt/main_drive/data/tandoor
  storageClassName: local-path
  mountOptions:
    - vers=4.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: tandoor
  name: data-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10G
  volumeName: tandoor-data-pv
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: tandoor
  name: db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  namespace: tandoor
  name: db
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: db
---
apiVersion: v1
kind: Service
metadata:
  namespace: tandoor
  name: tandoor
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: tandoor
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: tandoor
  namespace: tandoor
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`tandoor.{{DOMAIN}}`)
      kind: Rule
      services:
        - name: tandoor
          port: 80
