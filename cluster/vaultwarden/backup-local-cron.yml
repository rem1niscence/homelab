apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-local
  namespace: vaultwarden
data:
  backup.sh: "#!/bin/bash\n\n# Install dependencies\napt update\napt install -y jq\nnpm install -g @bitwarden/cli\n\nemail=$EMAIL\npassword=$PASSWORD\nencryption_password=$ENCRYPTION_PASSWORD\nbackup_folder=$BACKUP_FOLDER\nattachments_folder=$ATTACHMENTS_FOLDER\n\nif [ -z \"$ENCRYPTION_PASSWORD\" ] || [ -z \"$BACKUP_FOLDER\" ] || [ -z \"$ATTACHMENTS_FOLDER\" ]; then\n  echo \"Error: One or more of the required environment variables\" \\ \n      \"(ENCRYPTION_PASSWORD, SAVE_FOLDER, ATTACHMENTS_FOLDER) are not set.\"\n  exit 1\nfi\n\nbw config server http://vaultwarden.vaultwarden\n\necho \"Starting export script...\"\n\nif [[ $(bw status | jq -r .status) == \"unauthenticated\" ]]\nthen \n    echo \"ERROR: Failed to authenticate.\"\n    echo\n    exit 1\nfi\n\n#Unlock the vault\nsession_key=$(bw unlock $password --raw)\n\n#Verify that unlock succeeded\nif [[ $session_key == \"\" ]]\nthen \n    echo \"ERROR: Failed to authenticate.\"\n    echo\n    exit 1\nelse\n    echo \"Login successful.\"\n    echo\nfi\n\n#Export the session key as an env variable (needed by BW CLI)\nexport BW_SESSION=\"$session_key\" \n\necho \"Performing vault exports...\"\n\n# 1. Export the personal vault \nif [[ ! -d \"$backup_folder\" ]]\nthen\n    echo \"ERROR: Could not find the folder in which to save the files.\"\n    echo\n    exit 1\nfi\n\necho \necho \"Exporting personal vault to a password-encrypted file...\"\nbw export --format encrypted_json --password $encryption_password --output $backup_folder/backup.json\n\n# Perform attachments backup\nif [[ $(bw list items | jq -r '.[] | select(.attachments != null)') != \"\" ]]\nthen\n    echo\n    echo \"Saving attachments...\"\n    bash <(bw list items | jq -r '.[] \n    | select(.attachments != null) \n    | \"bw get attachment \\\"\\(.attachments[].fileName)\\\" --itemid \\(.id) --output \\\"'$attachments_folder'\\(.name)/\\\"\"' )\n\necho\necho \"vault export complete.\"\n\nbw lock \necho\n"
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-local
  namespace: vaultwarden
spec:
  schedule: "30 8 * * *"
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          nodeSelector:
            type: main
          containers:
            - name: backup-local
              image: node:slim
              command: ["/bin/bash", "/scripts/backup.sh"]
              envFrom:
                - secretRef:
                    name: backup-local
              volumeMounts:
                - name: backup
                  mountPath: /backup
                - name: attachments
                  mountPath: /attachments
                - name: script
                  mountPath: /scripts
          volumes:
            - name: backup
              persistentVolumeClaim:
                claimName: backup-pvc
            - name: attachments
              persistentVolumeClaim:
                claimName: attachments-pvc
            - name: script
              configMap:
                name: backup-script
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vaultwarden-backup-data-pv
spec:
  capacity:
    storage: 1G
  accessModes:
    - ReadWriteMany
  nfs:
    server: 10.0.0.95
    path: /mnt/main_drive/vaultwarden/backup
  storageClassName: local-path
  mountOptions:
    - vers=4.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: vaultwarden
  name: backup-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1G
  volumeName: vaultwarden-backup-data-pv
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vaultwarden-attachments-pv
spec:
  capacity:
    storage: 1G
  accessModes:
    - ReadWriteMany
  nfs:
    server: 10.0.0.95
    path: /mnt/main_drive/vaultwarden/attachments
  storageClassName: local-path
  mountOptions:
    - vers=4.0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: vaultwarden
  name: attachments-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1G
  volumeName: vaultwarden-attachments-pv
  storageClassName: local-path
