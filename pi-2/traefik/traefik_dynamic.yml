http:
  routers:
    traefik:
      rule: Host(`{{ env "DOMAIN" }}`) && (PathPrefix(`/traefik`) || PathPrefix(`/api`))
      service: "api@internal"
      middlewares:
        - strip-prefix      
      tls:
        certResolver: "tsresolver"
    portainer:
      rule: Host(`{{ env "DOMAIN" }}`) && PathPrefix(`/portainer`)
      service: portainer
      middlewares:
        - strip-prefix
      tls:
        certResolver: tsresolver
    grafana:
      rule: Host(`{{ env "DOMAIN" }}`) && PathPrefix(`/grafana`)
      service: grafana
      middlewares:
        - strip-prefix
      tls:
        certResolver: tsresolver
    omv:
      rule: Host(`{{ env "DOMAIN" }}`) && PathPrefix(`/omv`)
      service: omv
      middlewares:
        - "strip-prefix"
      tls:
        certResolver: tsresolver
    syncthing:
      rule: Host(`{{ env "DOMAIN" }}`) && PathPrefix(`/syncthing`)
      service: syncthing
      middlewares:
        - "strip-prefix"
      tls:
        certResolver: tsresolver
    torrent:
      rule: Host(`{{ env "DOMAIN" }}`) && PathPrefix(`/torrent`)
      service: torrent
      priority: 4
      middlewares:
        - strip-prefix
      tls:
        certResolver: tsresolver  
    torrent-redirect:
      rule: Host(`{{ env "DOMAIN" }}`) && Path(`/vuetorrent`)
      service: torrent
      priority: 3
      middlewares:
        - redirect-torrent
      tls:
        certResolver: tsresolver  
    sonarr:
      rule: Host(`{{ env "DOMAIN" }}`) && PathPrefix(`/sonarr`)
      service: sonarr
      tls:
        certResolver: tsresolver
    radarr:
      rule: Host(`{{ env "DOMAIN" }}`) && PathPrefix(`/radarr`)
      service: radarr
      tls:
        certResolver: tsresolver
    prowlarr:
      rule: Host(`{{ env "DOMAIN" }}`) && PathPrefix(`/prowlarr`)
      service: prowlarr
      tls:
        certResolver: tsresolver
    dashdot:
      rule: Host(`{{ env "DOMAIN" }}`) && (PathPrefix(`/dashdot`) || HeaderRegexp(`Referer`, `.*/dashdot/.*`))
      middlewares:
        - strip-prefix
      service: dashdot
      tls:
        certResolver: tsresolver
    # ---- Dashdot ------
    # This is all homarr"s fault, they"re hitting the wrong endpoints of dashdot
    dashdot-redirect:
      rule: Host(`{{ env "DOMAIN" }}`) && Path(`/dot`)
      middlewares:
        - redirect-dashdot
      service: dashdot
      tls:
        certResolver: tsresolver
    dashdot-api:
      rule: Host(`{{ env "DOMAIN" }}`) && PathPrefix(`/api/modules/dashdot`)
      service: dashdot
      middlewares:
        - strip-prefix
      tls:
        certResolver: tsresolver
    dashdot-storage-api:
      rule: Host(`{{ env "DOMAIN" }}`) && PathPrefix(`/api/modules/dashdot/storage`)
      service: dashdot
      middlewares:
        - dashdot-storage-path-replace
      tls:
        certResolver: tsresolver
    # --- !Dashdot ------

  services:
    portainer:
      loadBalancer:
        servers:
          - url: "http://portainer:9000"
    grafana:
      loadBalancer:
        servers:
          - url: "http://grafana:3000"
    omv:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:2010"
    syncthing:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:8384"
    dashdot:
      loadBalancer:
        servers:
          - url: "http://dashdot:3001"
    torrent:
      loadBalancer:
        servers:
          - url: "http://qbittorrent:8080"
    sonarr:
      loadBalancer:
        servers:
          - url: "http://sonarr:8989"    
    radarr:
      loadBalancer:
        servers:
          - url: "http://radarr:7878"    
    prowlarr:
      loadBalancer:
        servers:
          - url: "http://prowlarr:9696"

  middlewares:
    strip-prefix:
      stripPrefix:
        prefixes:
          - /portainer
          - /grafana
          - /omv
          - /syncthing
          - /traefik
          - /torrent
          - /dashdot
          - /api/modules/dashdot
    redirect-torrent:
      redirectRegex:
        regex: "^(.*)/vuetorrent"
        replacement: "/torrent/"
        permanent: true
    # ---- Dashdot ------
    redirect-dashdot:
      redirectRegex:
        regex: "^(.*)/dot"
        replacement: "/dashdot/"
        permanent: true
    dashdot-storage-path-replace:
      replacePath:
        path: "/load/storage"
    # --- !Dashdot ------     
    # auth:
    #   basicAuth:
    #     users:
    #       - "pi-admin:$apr1$pAYi7oll$NQR6hcTYFfIqBpnzpPBL91"
