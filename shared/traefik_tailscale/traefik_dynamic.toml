# [http]
# 	[http.routers]
# 		[http.routers.portainer]
# 			service = "portainer"
#       entrypoints = ["websecure"]
# 			rule = "Host(`pi-3.tail412fa.ts.net`)"
# 			[http.routers.portainer.tls]
# 				certResolver = "tailscaleResolver"

# 	[http.services]
# 		[http.services.portainer]
# 			[http.services.portainer.loadBalancer]
# 				[[http.services.portainer.loadBalancer.servers]]
# 					url = "http://portainer:9000"



# [http]
# 	[http.routers]
#   [http.routers.my-service]
#     rule = "Host(`pi-6.tail412fa.ts.net`) && PathPrefix(`/portainer/`)"
#     service = "my-service"
#     middlewares = ["portainer-stripprefix"]
#     entrypoints = ["websecure"]
#     [http.routers.my-service.tls]
#       certResolver = "tailscaleResolver"
      
# [http.services]
#   [http.services.my-service.loadBalancer]
#     [[http.services.my-service.loadBalancer.servers]]
#       url = "http://portainer:9000"

# [http.middlewares]
#   [http.middlewares.portainer-stripprefix.stripPrefix]
#     prefixes = ["/portainer"]
    
# [http.routers.api]
#   rule = "Host(`pi-3.tail412fa.ts.net`)"
#   entrypoints = ["websecure"]
#   # middlewares = ["simpleAuth", "add-slash"]
#   service = "api@internal"
#   [http.routers.api.tls]
#     certResolver = "tailscaleResolver"
 

# [http]
# 	[http.routers]
# 		[http.routers.towhoami]
			# service = "whoami"
			# rule = "Host(`myserver.yak-bebop.ts.net`)"
			# [http.routers.towhoami.tls]
			# 	certResolver = "myresolver"

	# [http.services]
		# [http.services.whoami]
		# 	[http.services.whoami.loadBalancer]
		# 		[[http.services.whoami.loadBalancer.servers]]
		# 			# docker run -d -p 6060:80 traefik/whoami
		# 			url = "<http://localhost:6060>"

# [http.middlewares.simpleAuth.basicAuth]
# [http.middlewares]
  # users = [
    # "admin:$apr1$Voh3n/tv$FYSQ3cJrdyjuYWwSDhru3/" # $ htpasswd -nb {username} {password}
  # ]
  # [http.middlewares.add-slash.addPrefix]
    # prefix = "/"

# [http.routers.api]
  # rule = "Host(`pi-1.local`)"
  # entrypoints = ["web"]
  # middlewares = ["simpleAuth", "add-slash"]
  # service = "api@internal"
  
  # [http.routers.api.tls]
    # certResolver = "lets-encrypt"

# [http]
# 	[http.routers]
# 		[http.routers.towhoami]
# 			service = "whoami"
# 			rule = "Host(`myserver.yak-bebop.ts.net`)"
# 			[http.routers.towhoami.tls]
# 				certResolver = "myresolver"

# http routing section
# [http]
#   [http.routers]
#      # Define route to match requests for your domain to a service
#      [http.routers.portainer]
#       rule = "Host(`pi-6.tail412fa.ts.net`)"
#       service = "portainer"
#       # If you want https you need to first configure a certificate resolver which can be used as below
#       [http.routers.portainer.tls]
#         certResolver = "tailscaleResolver"

#   # Define a service to handle forwarding the request to your Tailscale domain
#   [http.services]
#     # Define how to reach an existing service on our infrastructure
#     [http.services.portainer.loadBalancer]
#       [[http.services.portainer.loadBalancer.servers]]
#         url = "http://portainer:9000"